@using ASR.Data
@using Microsoft.AspNetCore.Identity

@model SlotStaffViewModel
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Slot";
}

<div class="container">
    <h3 class="mt-3 mb-3">Slots</h3>

    <hr />

    @if (User.IsInRole(Constants.StudentRole))
    {
        <form asp-action="Availability" class="form-inline">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group mr-2">
                <label asp-for="StartTime" class="control-label mr-2"></label>
                <input asp-for="StartTime" class="form-control" />
                <span asp-validation-for="StartTime" class="text-danger"></span>
            </div>

            <div class="form-group mr-2">
                <label asp-for="StaffID" class="control-label mr-2"></label>
                <select asp-for="StaffID" asp-items="Model.Staff" class="form-control"></select>
                <span asp-validation-for="StaffID" class="text-danger"></span>
            </div>

            <button type="submit" class="btn btn-primary mr-2">Check Availability</button>
        </form>

        <hr />
    }

    <table class="table table-bordered table-hover">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Slots[0].StartTime)
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.Slots[0].Staff)
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.Slots[0].Student)
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.Slots[0].RoomID)
                </th>

                @if (User.Identity.IsAuthenticated)
                {
                    <th>Actions</th>
                }
            </tr>
        </thead>

        <tbody>
            @if (!Model.Slots.Any())
            {
                <tr>
                    <td colspan="5" class="text-center">No Slots</td>
                </tr>
            }

            @foreach (var slot in Model.Slots)
            {
                <tr>
                    <td class="align-middle text-center">
                        @Html.DisplayFor(modelItem => slot.StartTime)
                    </td>

                    <td class="align-middle text-center">
                        @Html.DisplayFor(modelItem => slot.Staff.SchoolID)
                    </td>

                    <td class="align-middle text-center">
                        @if (slot.Student == null)
                        {
                            <span>--</span>
                        }
                        else if ((User.Identity.IsAuthenticated) && (slot.Student.SchoolID == UserManager.GetUserAsync(User).Result.SchoolID))
                        {
                            <span>Me</span>
                        }
                        else
                        {
                            @Html.DisplayFor(modelItem => slot.Student.SchoolID)
                        }
                    </td>

                    <td class="align-middle text-center">
                        @Html.DisplayFor(modelItem => slot.RoomID)
                    </td>

                    @if (User.Identity.IsAuthenticated)
                    {
                        <td>
                            @* check slot is not booked and is created by current user *@
                            @if (User.IsInRole(Constants.StaffRole) && (slot.StudentID == null) && (slot.Staff.Email == User.Identity.Name))
                            {
                                <form asp-action="Delete" class="d-flex justify-content-center">
                                    <input name="roomID" value="@slot.RoomID" type="hidden" />
                                    <input name="startTime" value="@slot.StartTime" type="hidden" />
                                    <input type="submit" value="Delete" class="btn btn-danger" />
                                </form>
                            }

                            @* check slot is not booked or booked by current user *@
                            @if (User.IsInRole(Constants.StudentRole) && (slot.StudentID == null || slot.Student.Email == User.Identity.Name))
                            {
                                <form asp-action="Book" class="d-flex justify-content-center">
                                    <input name="roomID" value="@slot.RoomID" type="hidden" />
                                    <input name="startTime" value="@slot.StartTime" type="hidden" />
                                    @if (slot.StudentID == null)
                                    {
                                        <input type="submit" value="Book" class="btn btn-success" />
                                    }
                                    else
                                    {
                                        <input type="submit" value="Cancel" class="btn btn-danger" />
                                    }
                                </form>
                            }
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>

    @if (User.IsInRole(Constants.StaffRole))
    {
        <hr />

        <p>
            <a class="btn btn-primary" asp-controller="Slot" asp-action="Create">Create New</a>
        </p>
    }
</div>
